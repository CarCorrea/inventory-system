# =============================================================================
# CONFIGURACIÃ“N PRINCIPAL - Sistema de Inventario Distribuido
# Spring Boot 3.5.5 + Java 17
# =============================================================================

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
server:
  port: 8080
  servlet:
    context-path: /api/v1
  shutdown: graceful
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# -----------------------------------------------------------------------------
# SPRING BOOT CONFIGURATION
# -----------------------------------------------------------------------------
spring:
  application:
    name: inventory-system
  
  # -----------------------------------------------------------------------------
  # DATABASE CONFIGURATION (H2 In-Memory)
  # -----------------------------------------------------------------------------
  datasource:
    url: jdbc:h2:mem:inventorydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  # -----------------------------------------------------------------------------
  # JPA/HIBERNATE CONFIGURATION
  # -----------------------------------------------------------------------------
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: false
        generate_statistics: false
        jdbc:
          batch_size: 25
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: false
    open-in-view: false
  
  # -----------------------------------------------------------------------------
  # H2 DATABASE CONSOLE
  # -----------------------------------------------------------------------------
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
        trace: false
  
  # -----------------------------------------------------------------------------
  # CACHING CONFIGURATION
  # -----------------------------------------------------------------------------
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m,recordStats
    cache-names:
      - inventory-availability
      - product-cache
      - store-cache
  
  # -----------------------------------------------------------------------------
  # TRANSACTION CONFIGURATION
  # -----------------------------------------------------------------------------
  transaction:
    default-timeout: 30s
    rollback-on-commit-failure: true
  
  # -----------------------------------------------------------------------------
  # JSON SERIALIZATION
  # -----------------------------------------------------------------------------
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: America/Santiago
    locale: es_CL

# -----------------------------------------------------------------------------
# SPRINGDOC/SWAGGER CONFIGURATION
# -----------------------------------------------------------------------------
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui/index.html
    url: /v3/api-docs
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    displayRequestDuration: true
    displayOperationId: true
    defaultModelsExpandDepth: 2
    defaultModelExpandDepth: 2
    docExpansion: none
  show-actuator: false
  group-configs:
    - group: inventory-api
      display-name: Inventory Management API
      paths-to-match:
        - /**
#
# -----------------------------------------------------------------------------
# ACTUATOR/MONITORING CONFIGURATION
# -----------------------------------------------------------------------------
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches,httptrace,loggers
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    caches:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
    diskspace:
      enabled: true
      threshold: 100MB
  metrics:
    export:
      simple:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.50,0.90,0.95,0.99
    tags:
      application: ${spring.application.name}

# -----------------------------------------------------------------------------
# RESILIENCE4J CONFIGURATION (Circuit Breaker, Retry, etc.)
# -----------------------------------------------------------------------------
resilience4j:
  circuitbreaker:
    instances:
      inventory-service:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        record-exceptions:
          - com.challenge.meli.inventory.exception.InventoryServiceException
          - java.sql.SQLException
          - org.springframework.dao.DataAccessException
        ignore-exceptions:
          - com.challenge.meli.inventory.exception.ReservationNotFoundException
  
  retry:
    instances:
      inventory-service:
        max-attempts: 3
        wait-duration: 100ms
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - org.springframework.dao.OptimisticLockingFailureException
          - java.sql.SQLTransientException
        ignore-exceptions:
          - com.challenge.meli.inventory.exception.InsufficientStockException
  
  timelimiter:
    instances:
      inventory-service:
        timeout-duration: 5s
        cancel-running-future: true

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
logging:
  level:
    root: INFO
    com.retail.inventory: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.cache: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: logs/inventory-system.log
    max-size: 10MB
    max-history: 5